#!/usr/bin/env ruby

require 'cdnjs_command'

ARGV.extend Params

# ============================================================================
# Le controller

case ARGV
when Params['-h', '--help']
  show_help

when Params['-v', '--version']
  puts "cdnjs-command #{CDNJS_VERSION}"

when Params['list', 'l']
  Package.all.each { |pkg|
    puts "%-20s %s" % [ pkg.name + " (" + pkg.version + ")", ""]
  }

when Params['html', 'h']
  name = ARGV.shift  or invalid_usage("cdnjs html NAME")
  pkg  = get_package(name)

  puts "<script src='#{pkg.url}'></script>"

when Params['url', 'u']
  name = ARGV.shift  or invalid_usage("cdnjs url NAME")
  puts get_package(name).url

when Params['info', 'i']
  name = ARGV.shift  or invalid_usage("cdnjs info NAME")
  pkg  = get_package(name)

  puts "%s (%s)" % [ pkg.name, pkg.version ]
  puts ""
  puts "%-10s %s" % [ "URL:", pkg.url ]
  puts "%-10s %s" % [ "Homepage:", pkg.homepage ]
  puts ""
  puts pkg.description
  puts ""
  puts "<!-- Include this library in your project with: -->"
  puts "<script src='#{pkg.url}'></script>"

  if pkg.url =~ /^https/
    puts ""
    puts "<!-- (You may need to replace 'https' with 'http'.) -->"
  end


  p pkg  if ARGV.delete('-v')

  when Params['update']
    Fetcher.purge
    Package.all
    tip "Done."

  else
    name = ARGV.shift  or (show_help; exit)
    pkg  = Package[name] or begin
    if ARGV.empty?
      puts "Invalid package name."
    else
      puts "Invalid usage."
    end
    puts "For a list of all packages: cdnjs list"
    puts "For more help: cdnjs --help"
    exit
  end

  data = Fetcher.fetch(pkg.url)
  File.open(pkg.basename, 'w') { |f| f.write data }

  tip "Created #{pkg.basename}."
end
